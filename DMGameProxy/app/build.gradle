// AS通过Gradle构建项目：先进的项目构建工具
plugins {
    // application模块：可以直接运行
    id 'com.android.application'
//    // library模块：必须依赖于别的应用程序模块运行
//    id "com.android.library"
}

android {
    namespace 'com.lrgame.goc.cn'
    // 编译版本
    compileSdk 33

    // 项目细节配置
    defaultConfig {
        // 包名
        applicationId "com.lrgame.goc.cn"
        // 最低兼容Android版本
        // minSdkVersion
        minSdk 24
        // 目标版本：在这个版本做过充分测试，系统会在该版本启动新功能
        targetSdk 33
        /**
         * 作用：用于标识应用版本
         * 1.versionCode是Integer类型，每次必须唯一且新版本必须比老版本大，用于android系统更新应用...一般使用"1, 2, 3, 4, 5..."
         * 2.versionName是String类型，用于向用户显示应用的版本信息（可读性更强、不需要唯一、也不需要递增）...一般使用"1.0.0, 1.0.1, 1.1.2, 2.1.3, 3.20.5..."
         */
        // 项目版本号
        versionCode 1
        // 项目版本名
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

//    // 目录指向配置
//    sourceSets {
//        main {
//            manifest.srcFile 'AndroidManifest.xml' // 指定AndroidManifest文件
//            java.srcDirs = ['src'] // 指定source目录
//            resources.srcDirs = ['src'] // 指定source目录
//            aidl.srcDirs = ['src'] // 指定source目录
//            renderscript.srcDirs = ['src'] // 指定source目录
//            res.srcDirs = ['res'] // 指定资源目录
//            assets.srcDirs = ['assets'] // 指定assets目录
//            jniLibs.srcDirs = ['libs'] // 指定lib库目录
//        }
//        debug.setRoot('build-types/debug') // 指定debug模式的路径
//        release.setRoot('build-types/release') // 指定release模式的路径
//    }
//
//    // 签名配置
//    // .jks文件和.keystore文件区别？？？
//    // >>.jks文件和.keystore文件实际上是同一类文件的不同表现形式，用于存储密钥和证书信息，以便对apk进行签名
//    signingConfigs {
//        debug { // debug版签名配置
//            storeFile file("../test.jks") // 密钥文件路径
//            storePassword "123" // 密钥文件密码
//            keyAlias "test" // key别名
//            keyPassword "123" // key密码
//        }
//        release { // 发布版签名配置
//            storeFile file("../test.jks") // 密钥文件路径
//            storePassword "123" // 密钥文件密码
//            keyAlias "test" // key别名
//            keyPassword "123" // key密码
//        }
//    }

    // 生成安装文件的相关配置
    buildTypes {
        // 测试版安装文件的配置：可以省略
        // >>通过AS直接运行项目生成的都是测试版安装文件
        debug {
            // 指定是否对项目的代码进行混淆
            minifyEnabled false
            debuggable true
//            signingConfig signingConfigs.debug
        }
        // 正式版安装文件的配置
        // >>如何生成正式版安装文件：查看Build Variants
        release {
            minifyEnabled false
            // 指定混淆时使用的规则文件
            // >>proguard-android-optimize.txt位于Android SDK目录下：所有项目通用的混淆规则
            // >>proguard-rules.pro当前项目的根目录下：可以编写当前项目特有的混淆规则
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// 指定当前项目所有的依赖关系
dependencies {
//    // 1>.本地依赖：对本地的jar包或目录添加依赖关系（编译libs文件下所有.jar文件和.aar文件）
//    // jar Java Archive java二进制归档文件
//    // aar Android Archive android二进制归档文件
//    implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
//    implementation files("libs/Gson.jar")
//    // 2>.库依赖：编译附加项目
//    implementation project(path: ":core")
//    // 3：远程依赖：编译框架
//    // 域名:组名:版本名
//    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.activity:activity:1.9.3'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}